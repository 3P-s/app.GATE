[
    {
        "Qid": 1,
        "question_text": "In a compact single dimensional array representation for lower triangular matrices (i.e all the elements above the diagonal are zero) of size nX n, non-zero elements (i.e., elements of the lower triangle) of each row are stored one after another, starting from the first row, the index of the (i, j)th element of the lower triangular matrix in this new representation is",
        "A": "i+j",
        "B": "i+j-1",
        "C": "(j-1) + i(i-1)/2",
        "D": "i + j(j-1)/2",
        "correct_option": [
            "C"
        ],
        "current_year": 1994,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 2,
        "question_text": "Let A be a two dimensional array declared as follows: A : array [ 1... 10] [1... 15] of integer; Assuming that each integer takes one memory locations the array is stored in row-major order and the first element of the array is stored at location 100, what is the address of the element A[i] [j]?",
        "A": "15i+j+84",
        "B": "15j+i+84",
        "C": "10i+j+89",
        "D": "10j+i+89",
        "correct_option": [
            "B"
        ],
        "current_year": 1998,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 4,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 3,
        "question_text": "Suppose you are given an array s[1..n] and a procedure reverse (s, i, j) which reverse the order of elements in s between positions i and j (both inclusive). What does the following sequence do, where reverse (s, 1, k); reverse (s, k+1, k); reverse (s, 1, n);",
        "A": "Rotates s left by k positions",
        "B": "Leaves s unchanged",
        "C": "Reverses all elements of s",
        "D": "None of the above",
        "correct_option": [
            "A"
        ],
        "current_year": 2000,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Array",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 6,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 4,
        "question_text": "An n X n array v is defined as follows V [i, j] = i - j for all i, j, The sum of the elements of the array v is",
        "A": "0",
        "B": "n-1",
        "C": "n^2 - 3n + 2",
        "D": "n^2(n+1)/2",
        "correct_option": [
            "A"
        ],
        "current_year": 2000,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Array",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 6,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 5,
        "question_text": "Two matrices M1 and M2 are to be stored in arrays A and B respectively. Each array can be stored either in row-major or column-major order in contiguous memory locations. The time complexity of an algorithm to compute M1 X M2 will be",
        "A": "Best if A is a row major and b is column major",
        "B": "Best if both are row-major",
        "C": "Best if both are column-major",
        "D": "independent of storage system",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 10,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 6,
        "question_text": "A single array A[1..MAXSIZE] is used to implement two stacks, The two stacks grow from opposite ends of the array. Variables top1 and top2 (top1 < top2) point to the location of the topmost element in each of the stacks, If the space is to be used efficiently, the condition for 'stack full' is",
        "A": "(top 1 == MAXSIZE / 2) and (top 2 == MAXSIZE/2+1)",
        "B": "top1 + top2 = MAXSIZE",
        "C": "(top 1 == MAXSIZE / 2) or (top 2 == MAXSIZE/2+1)",
        "D": "top 1 = top 2 - 1",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 10,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 7,
        "question_text": "A program P reads in 500 integers in the range [0, 100] representing the cores of 500 students. It then print the frequency of each score above 50. What would be the best way for P to store the frequencies?",
        "A": "an array of 50 numbers",
        "B": "An array of 100 numbers",
        "C": "An array of 500 numbers",
        "D": "A dynamically allocated array of 550",
        "correct_option": [
            "A"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Array",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 8,
        "question_text": "Consider the following C functions in which size is the number of elements in the array E: The value returned by the function MyX is the",
        "A": "Maximum possible sum of elements in any subarray of E",
        "B": "Maximum elements in any subarray of E",
        "C": "Sum of maximum elements in all possible sub-arrays of E",
        "D": "The sum of allelements of E",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 9,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 20,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 9,
        "question_text": "Consider the following C program. The output of the program is _______.",
        "A": "20",
        "B": "19",
        "C": "10",
        "D": "11",
        "correct_option": [
            "B"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Array",
        "years_since_last_appearance": 6,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 26,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 10,
        "question_text": "Define Rn to be the maximum amount earned by cutting a rod of length n meters into one or more pieces of integer length and selling them. For i > 0, let p[i] denotes the selling price of a rod whose length is i meters. Consider the array of prices: p[1] = 1, p[2] = 5, p[3] = 8, p[4] = 9, p[5] = 10, p[6] = 17, p[7] = 18. Which of the following statements is/are correct about R7?",
        "A": "R7 cannot be achieved by a solution consisting of 3 pieces",
        "B": "R7 = 19",
        "C": "R7 = 18",
        "D": "R7 is achieved by 3 different solutions",
        "correct_option": [
            "C",
            "D"
        ],
        "current_year": 2021,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 11,
        "question_text": "Let P be an array containing n integers. Let t be the lowest upper bound on the number of comparisons of the array elements, required to find the minimum and maximum values in an arbitrary of n elements. Which one of the following choices is correct?",
        "A": "t > 2n-2",
        "B": "t > 3n/2 and t <= 2n-2",
        "C": "tc > n and t <= 3n/2",
        "D": "t > log(n) and t <= n",
        "correct_option": [
            "C"
        ],
        "current_year": 2021,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 12,
        "question_text": "An advantage of chained hash table (external hashing) over the open addressing scheme is",
        "A": "worst case complexity of search is less",
        "B": "space used is less",
        "C": "deletion is easier",
        "D": "None of the above",
        "correct_option": [
            "C"
        ],
        "current_year": 1996,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 13,
        "question_text": "Given the following input (4322, 1334, 1471, 9679, 1989, 6171, 6173, 4199) and the hash function x mod 10, which of the following statements are true? i) 9679, 1989, 4199 hash to the same value ii) 1471, 6171 has to the same value iii) All elements hash to the same value iv) Each element hashes to a different value",
        "A": "i only",
        "B": "ii only",
        "C": "i and ii only",
        "D": "iii or iv",
        "correct_option": [
            "C"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 8,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 6,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 14,
        "question_text": "A hash table contains 10 buckets and uses linear probing to resolve collisions. The key values are integers and the hash function used is key % 10. If the values 43, 165, 62, 123, 142 are inserted in the table, in what location would the key value 142 be inserted?",
        "A": "2",
        "B": "3",
        "C": "4",
        "D": "6",
        "correct_option": [
            "D"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 9,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 15,
        "question_text": "Consider a hash function that distributes keys uniformly. The hash table size is 20. After hashing of how many keys will the probability that any new key hashed collides with an existing one exceed 0.5.",
        "A": "5",
        "B": "6",
        "C": "7",
        "D": "10",
        "correct_option": [
            "D"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 16,
        "question_text": "Consider a hash table of size seven, with starting index zero, and a hash function (3x + 4)mod7. Assuming the hash table is initially empty, which of the following is the contents of the table when the sequence 1, 3, 8, 10 is inserted into the table using closed hashing? Note that ‘_’ denotes an empty location in the table.",
        "A": "8,_,_,_,_,_,10",
        "B": "1,8,10,_,_,_,3",
        "C": "1,_,_,_,_,_,3",
        "D": "1,10,8,_,_,_,3",
        "correct_option": [
            "B"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 17,
        "question_text": "Consider the following two statements: i. A hash function (these are often used for computing digital signatures) is an injective function. ii. encryption technique such as DES performs a permutation on the elements of its input alphabet. Which one of the following options is valid for the above two statements?",
        "A": "Both are false",
        "B": "Statement i is true and statement ii is false",
        "C": "Statement ii is true and statement i is false",
        "D": "Both are true",
        "correct_option": [
            "C"
        ],
        "current_year": 2007,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 18,
        "question_text": "Consider a hash table of size 11 that uses open addressing with linear probing. Let h(k) = k mod 11 be the hash function used. A sequence of records with keys 43 36 92 87 11 4 71 13 14 is inserted into an initially empty hash table, the bins of which are indexed from zero to ten. What is the index of the bin into which the last record is inserted?",
        "A": "2",
        "B": "4",
        "C": "6",
        "D": "7",
        "correct_option": [
            "D"
        ],
        "current_year": 2008,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 12,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 19,
        "question_text": "The keys 12, 18, 13, 2, 3, 23, 5 and 15 are inserted into an initially empty hash table of length 10 using open addressing with hash function h(k) = k mod 10 and linear probing. What is the resultant hash table?",
        "A": "2-2, 3-23, 5-15, 8-18",
        "B": "2-12, 3-13, 5-5, 8-18",
        "C": "2-12, 3-13, 4-2, 5-3, 6-23, 7-5, 8-18, 9-15",
        "D": "2-(12, 2), 3-(13,3,23), 5-(5,15), 8-18",
        "correct_option": [
            "C"
        ],
        "current_year": 2009,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 13,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 20,
        "question_text": "A hash table of length 10 uses open addressing with hash function h(k)=k mod 10, and linear probing. After inserting 6 values into an empty hash table, the table is as shown below. How many different insertion sequences of the key values using the same hash function and linear probing will result in the hash table shown above?",
        "A": "10",
        "B": "20",
        "C": "30",
        "D": "40",
        "correct_option": [
            "C"
        ],
        "current_year": 2010,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 14,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 21,
        "question_text": "A hash table of length 10 uses open addressing with hash function h(k)=k mod 10, and linear probing. After inserting 6 values into an empty hash table, the table is as shown below. Which one of the following choices gives a possible order in which the key values could have been inserted in the table?",
        "A": "46,42,34,52,23,33",
        "B": "34,42, 23,52,33,46",
        "C": "46,34,42,23,52,33",
        "D": "42,46,33,23,34,52",
        "correct_option": [
            "C"
        ],
        "current_year": 2010,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 14,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 22,
        "question_text": "Consider a hash table with 9 slots. The hash function is h(k) = k mod 9. The collisions are resolved by chaining. The following 9 keys are inserted in the order: 5, 28, 19, 15, 20, 33, 12, 17, 10. The maximum, minimum, and average chain lengths in the hash table, respectively, are",
        "A": "3,0,1",
        "B": "3,3,3",
        "C": "4,0,1",
        "D": "3,0,2",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 23,
        "question_text": "Consider a hash table with 100 slots. Collisions are resolved using chaining. Assuming simple uniform hashing, what is the probability that the first 3 slots are unfilled after the first 3 insertions?",
        "A": "(97x97x97)/100^3",
        "B": "(99x98x97)/100^3",
        "C": "(97x96x95)/100^3",
        "D": "(97x96x95)/3!x100^3",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 24,
        "question_text": "Which one of the following hash functions on integers will distribute keys most uniformly over 10 buckets numbered 0 to 9 for i ranging from 0 to 2020?",
        "A": "h(i) = i^2 mod 10",
        "B": "h(i) = i^3 mod 10",
        "C": "h(i) = (11*i^2) mod 10",
        "D": "h(i) = (12*i) mod 10",
        "correct_option": [
            "B"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 25,
        "question_text": "Given a hash table T with 25 slots that stores 2000 elements, the load factor 'alpha' for T is?",
        "A": "70",
        "B": "80",
        "C": "90",
        "D": "100",
        "correct_option": [
            "B"
        ],
        "current_year": 2015,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 26,
        "question_text": "Consider a double hashing scheme in which the primary hash function is h1(k)=k mod 23, and the secondary hash function is h2(k)=1+(k mod 19). Assume that the table size is 23. Then the address returned by probe 1 in the probe sequence (assume that the probe sequence begins at probe 0) for key value k=90 is _______.",
        "A": "10",
        "B": "11",
        "C": "92",
        "D": "13",
        "correct_option": [
            "D"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 5,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 24,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 27,
        "question_text": "Consider a dynamic hashing approach for 4-bit integer keys: 1. There is a main hash table of size 4.2. The 2 least significant bits of a key is used to index into the main hash table.3. Initially, the main hash table entries are empty.4. Thereafter, when more keys are hashed into it, to resolve collisions, the set of all keys corresponding to a main hash table entry is organized as a binary tree that grows on demand.5. First, the 3rd least significant bit is used to divide the keys into left and right subtrees.6. to resolve more collisions, each node of the binary tree is further sub-divided into left and right subtrees based on 4th least significant bit.7. A split is done only if it is needed, i. e. only when there is a collision.Consider the following state of the hash table.",
        "A": "10, 9, 6, 7, 5, 13",
        "B": "5,9,4,13,10,7",
        "C": "9, 5, 13, 6, 10, 14",
        "D": "9, 5, 10, 6, 7, 1",
        "correct_option": [
            "A"
        ],
        "current_year": 2021,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 25,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 28,
        "question_text": "Suppose we are given n keys, m has table slots, and two simple uniform hash functions h1 and h2. Further suppose our hashing scheme uses h1 for the odd keys and h2 for the even keys. What is the expected number of keys in a slot?",
        "A": "m/n",
        "B": "n/m",
        "C": "2n/m",
        "D": "n/2m",
        "correct_option": [
            "B"
        ],
        "current_year": 2022,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 26,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 29,
        "question_text": "An algorithm has to store several keys generated by an adversary in a hash table. The adversary is malicious who tries to maximize the number of collisions. Let k be the number of keys, m be the number of slots in the hash table, and k > m. Which one of the following is the best hashing strategy to counteract the adversary?",
        "A": "Division method",
        "B": "Multilication method",
        "C": "Universal hashing",
        "D": "if k is prime, use division. Otherwise use Multiplication",
        "correct_option": [
            "C"
        ],
        "current_year": 2023,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 30,
        "question_text": "A queue is implemented using an array such that ENQUEUE and DEQUEUE operations are performed efficiently. Which one of the following statements is CORRECT (refers to the number of items in the queue)?",
        "A": "Both operations can be performed in O(1) Time",
        "B": "At most one aperation is performed in O(1) Time but the worst-case time complexity of the other operation is Omega(n)",
        "C": "The worst case time complexity of both operations is Omega(n)",
        "D": "The worst-case time complexity of both operations is Omega(log n)",
        "correct_option": [
            "A"
        ],
        "current_year": 2016,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 31,
        "question_text": "The result evaluating the postfix expression 10 5 + 60 6 / * 8 - is",
        "A": "284",
        "B": "213",
        "C": "142",
        "D": "71",
        "correct_option": [
            "C"
        ],
        "current_year": 2015,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 32,
        "question_text": "A function f defined on stacks of integers satisfies the following properties. f(∅) = 0 and f (push (S, i)) = max (f(S), 0) + i for all stacks S and integers i. If a stack S contains the integers 2, -3, 2, -1, 2 in order from bottom to top, what is f(S)?",
        "A": "6",
        "B": "4",
        "C": "3",
        "D": "2",
        "correct_option": [
            "C"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 33,
        "question_text": "Consider the following sequence of operations on an empty stack.push(54); push(52); pop(); push(55); push(62); s = pop(); Consider the following sequence of operations on an empty queue.enqueue(21); enqueue(24); dequeue(); enqueue(28); enqueue(32); q = dequeue(); The value of s + q is",
        "A": "74",
        "B": "87",
        "C": "85",
        "D": "86",
        "correct_option": [
            "D"
        ],
        "current_year": 2021,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 34,
        "question_text": "Suppose a stack implementation supports an instruction REVERSE, which reverses the order of elements on the stack, in addition to the PUSH and POP instructions. Which one of the following statements is TRUE with respect to this modified stack?",
        "A": "A queue cannot be implemented using stack",
        "B": "A queue can be implemented where ENQUEUE takes a single instruction and DEQUEUE takes a sequence of two instructions",
        "C": "A queue can be implemented where ENQUEUE takes a sequence of three instructions and DEQUEUE takes a single instruction",
        "D": "A queue can be implemented where both ENQUEUE and DEQUEUE take a single instruction each",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 35,
        "question_text": "Suppose a circular queue of capacity (n - 1) elements is implemented with an array of n elements. Assume that the insertion and deletion operations are carried out using REAR and FRONT as array index variables, respectively. Initially, REAR = FRONT = 0. The conditions to detect queue full and queue empty are",
        "A": "full: (REAR+1) mod n == FRONT; empty: REAR == FRONT",
        "B": "full: (REAR+1) mod n == FRONT; empty: (REAR+1) mod n == FRONT",
        "C": "full: REAR == FRONT; empty: (REAR+1) mod n == FRONT",
        "D": "full: (FRONT+1) mod n == FRONT; empty: REAR == FRONT",
        "correct_option": [
            "A"
        ],
        "current_year": 2012,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 36,
        "question_text": "What is the worst case time complexity of inserting n elements into an empty linked list, if the linked list needs to be maintained in sorted order?",
        "A": "Theta(n^2)",
        "B": "Theta(n)",
        "C": "Theta(n log n)",
        "D": "Theta(1)",
        "correct_option": [
            "A",
            "C"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Linked List",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 37,
        "question_text": "N items are stored in a sorted doubly linked list. For a delete  operation, a pointer is provided to the record to be deleted. For a decrease key operation, a pointer is provided to the record on which the operation is to be performed. An algorithm performs the following operations on the list in this order: Theta(N), delete, O(log N) insert, O(log N) fund, and Theta(N) decrease-key. What is the time complexity of all these operations put together?",
        "A": "O(log^2(N))",
        "B": "O(N)",
        "C": "O(N^2)",
        "D": "Theta(N^2 log N)",
        "correct_option": [
            "C"
        ],
        "current_year": 2016,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Linked List",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 38,
        "question_text": "Let P be a singly linked list, Let Q be the pointer to an intermediate node x in the list.What is the worst-case time complexity of the best known algorithm to delete the node x from the list?",
        "A": "O(n)",
        "B": "O(log^2(n))",
        "C": "O(log n)",
        "D": "O(1)",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Linked List",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 39,
        "question_text": "The preorder traversal sequence of a binary search tree is 30, 20, 10, 15, 25, 23, 39, 35, 42. Which one of the following is the postorder traversal sequence of the same tree?",
        "A": "10,20,15,23,25,35,42,39,30",
        "B": "15,10,25,23,20,42,35,39,30",
        "C": "15,20,10,23,25,42,35,39,30",
        "D": "15,10,23,25,20,35,42,39,30",
        "correct_option": [
            "D"
        ],
        "current_year": 2013,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Linked List, Binary Search Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    }
]