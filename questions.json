[
    {
        "Qid": 1,
        "question_text": "In a compact single dimensional array representation for lower triangular matrices (i.e all the elements above the diagonal are zero) of size nX n, non-zero elements (i.e., elements of the lower triangle) of each row are stored one after another, starting from the first row, the index of the (i, j)th element of the lower triangular matrix in this new representation is",
        "A": "i+j",
        "B": "i+j-1",
        "C": "(j-1) + i(i-1)/2",
        "D": "i + j(j-1)/2",
        "correct_option": [
            "C"
        ],
        "current_year": 1994,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 2,
        "question_text": "Let A be a two dimensional array declared as follows: A : array [ 1... 10] [1... 15] of integer; Assuming that each integer takes one memory locations the array is stored in row-major order and the first element of the array is stored at location 100, what is the address of the element A[i] [j]?",
        "A": "15i+j+84",
        "B": "15j+i+84",
        "C": "10i+j+89",
        "D": "10j+i+89",
        "correct_option": [
            "B"
        ],
        "current_year": 1998,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 4,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 3,
        "question_text": "Suppose you are given an array s[1..n] and a procedure reverse (s, i, j) which reverse the order of elements in s between positions i and j (both inclusive). What does the following sequence do, where reverse (s, 1, k); reverse (s, k+1, k); reverse (s, 1, n);",
        "A": "Rotates s left by k positions",
        "B": "Leaves s unchanged",
        "C": "Reverses all elements of s",
        "D": "None of the above",
        "correct_option": [
            "A"
        ],
        "current_year": 2000,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Array",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 6,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 4,
        "question_text": "An n X n array v is defined as follows V [i, j] = i - j for all i, j, The sum of the elements of the array v is",
        "A": "0",
        "B": "n-1",
        "C": "n^2 - 3n + 2",
        "D": "n^2(n+1)/2",
        "correct_option": [
            "A"
        ],
        "current_year": 2000,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Array",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 6,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 5,
        "question_text": "Two matrices M1 and M2 are to be stored in arrays A and B respectively. Each array can be stored either in row-major or column-major order in contiguous memory locations. The time complexity of an algorithm to compute M1 X M2 will be",
        "A": "Best if A is a row major and b is column major",
        "B": "Best if both are row-major",
        "C": "Best if both are column-major",
        "D": "independent of storage system",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 10,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 6,
        "question_text": "A single array A[1..MAXSIZE] is used to implement two stacks, The two stacks grow from opposite ends of the array. Variables top1 and top2 (top1 < top2) point to the location of the topmost element in each of the stacks, If the space is to be used efficiently, the condition for 'stack full' is",
        "A": "(top 1 == MAXSIZE / 2) and (top 2 == MAXSIZE/2+1)",
        "B": "top1 + top2 = MAXSIZE",
        "C": "(top 1 == MAXSIZE / 2) or (top 2 == MAXSIZE/2+1)",
        "D": "top 1 = top 2 - 1",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 10,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 7,
        "question_text": "A program P reads in 500 integers in the range [0, 100] representing the cores of 500 students. It then print the frequency of each score above 50. What would be the best way for P to store the frequencies?",
        "A": "an array of 50 numbers",
        "B": "An array of 100 numbers",
        "C": "An array of 500 numbers",
        "D": "A dynamically allocated array of 550",
        "correct_option": [
            "A"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Array",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 8,
        "question_text": "Consider the following C functions in which size is the number of elements in the array E: The value returned by the function MyX is the",
        "A": "Maximum possible sum of elements in any subarray of E",
        "B": "Maximum elements in any subarray of E",
        "C": "Sum of maximum elements in all possible sub-arrays of E",
        "D": "The sum of allelements of E",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 9,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 20,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 9,
        "question_text": "Consider the following C program. The output of the program is _______.",
        "A": "20",
        "B": "19",
        "C": "10",
        "D": "11",
        "correct_option": [
            "B"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Array",
        "years_since_last_appearance": 6,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 26,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 10,
        "question_text": "Define Rn to be the maximum amount earned by cutting a rod of length n meters into one or more pieces of integer length and selling them. For i > 0, let p[i] denotes the selling price of a rod whose length is i meters. Consider the array of prices: p[1] = 1, p[2] = 5, p[3] = 8, p[4] = 9, p[5] = 10, p[6] = 17, p[7] = 18. Which of the following statements is/are correct about R7?",
        "A": "R7 cannot be achieved by a solution consisting of 3 pieces",
        "B": "R7 = 19",
        "C": "R7 = 18",
        "D": "R7 is achieved by 3 different solutions",
        "correct_option": [
            "C",
            "D"
        ],
        "current_year": 2021,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 11,
        "question_text": "Let P be an array containing n integers. Let t be the lowest upper bound on the number of comparisons of the array elements, required to find the minimum and maximum values in an arbitrary of n elements. Which one of the following choices is correct?",
        "A": "t > 2n-2",
        "B": "t > 3n/2 and t <= 2n-2",
        "C": "tc > n and t <= 3n/2",
        "D": "t > log(n) and t <= n",
        "correct_option": [
            "C"
        ],
        "current_year": 2021,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Array",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 3.5
    },
    {
        "Qid": 12,
        "question_text": "An advantage of chained hash table (external hashing) over the open addressing scheme is",
        "A": "worst case complexity of search is less",
        "B": "space used is less",
        "C": "deletion is easier",
        "D": "None of the above",
        "correct_option": [
            "C"
        ],
        "current_year": 1996,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 13,
        "question_text": "Given the following input (4322, 1334, 1471, 9679, 1989, 6171, 6173, 4199) and the hash function x mod 10, which of the following statements are true? i) 9679, 1989, 4199 hash to the same value ii) 1471, 6171 has to the same value iii) All elements hash to the same value iv) Each element hashes to a different value",
        "A": "i only",
        "B": "ii only",
        "C": "i and ii only",
        "D": "iii or iv",
        "correct_option": [
            "C"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 8,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 6,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 14,
        "question_text": "A hash table contains 10 buckets and uses linear probing to resolve collisions. The key values are integers and the hash function used is key % 10. If the values 43, 165, 62, 123, 142 are inserted in the table, in what location would the key value 142 be inserted?",
        "A": "2",
        "B": "3",
        "C": "4",
        "D": "6",
        "correct_option": [
            "D"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 9,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 15,
        "question_text": "Consider a hash function that distributes keys uniformly. The hash table size is 20. After hashing of how many keys will the probability that any new key hashed collides with an existing one exceed 0.5.",
        "A": "5",
        "B": "6",
        "C": "7",
        "D": "10",
        "correct_option": [
            "D"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 16,
        "question_text": "Consider a hash table of size seven, with starting index zero, and a hash function (3x + 4)mod7. Assuming the hash table is initially empty, which of the following is the contents of the table when the sequence 1, 3, 8, 10 is inserted into the table using closed hashing? Note that ‘_’ denotes an empty location in the table.",
        "A": "8,_,_,_,_,_,10",
        "B": "1,8,10,_,_,_,3",
        "C": "1,_,_,_,_,_,3",
        "D": "1,10,8,_,_,_,3",
        "correct_option": [
            "B"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 17,
        "question_text": "Consider the following two statements: i. A hash function (these are often used for computing digital signatures) is an injective function. ii. encryption technique such as DES performs a permutation on the elements of its input alphabet. Which one of the following options is valid for the above two statements?",
        "A": "Both are false",
        "B": "Statement i is true and statement ii is false",
        "C": "Statement ii is true and statement i is false",
        "D": "Both are true",
        "correct_option": [
            "C"
        ],
        "current_year": 2007,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 18,
        "question_text": "Consider a hash table of size 11 that uses open addressing with linear probing. Let h(k) = k mod 11 be the hash function used. A sequence of records with keys 43 36 92 87 11 4 71 13 14 is inserted into an initially empty hash table, the bins of which are indexed from zero to ten. What is the index of the bin into which the last record is inserted?",
        "A": "2",
        "B": "4",
        "C": "6",
        "D": "7",
        "correct_option": [
            "D"
        ],
        "current_year": 2008,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 12,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 19,
        "question_text": "The keys 12, 18, 13, 2, 3, 23, 5 and 15 are inserted into an initially empty hash table of length 10 using open addressing with hash function h(k) = k mod 10 and linear probing. What is the resultant hash table?",
        "A": "2-2, 3-23, 5-15, 8-18",
        "B": "2-12, 3-13, 5-5, 8-18",
        "C": "2-12, 3-13, 4-2, 5-3, 6-23, 7-5, 8-18, 9-15",
        "D": "2-(12, 2), 3-(13,3,23), 5-(5,15), 8-18",
        "correct_option": [
            "C"
        ],
        "current_year": 2009,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 13,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 20,
        "question_text": "A hash table of length 10 uses open addressing with hash function h(k)=k mod 10, and linear probing. After inserting 6 values into an empty hash table, the table is as shown below. How many different insertion sequences of the key values using the same hash function and linear probing will result in the hash table shown above?",
        "A": "10",
        "B": "20",
        "C": "30",
        "D": "40",
        "correct_option": [
            "C"
        ],
        "current_year": 2010,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 14,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 21,
        "question_text": "A hash table of length 10 uses open addressing with hash function h(k)=k mod 10, and linear probing. After inserting 6 values into an empty hash table, the table is as shown below. Which one of the following choices gives a possible order in which the key values could have been inserted in the table?",
        "A": "46,42,34,52,23,33",
        "B": "34,42, 23,52,33,46",
        "C": "46,34,42,23,52,33",
        "D": "42,46,33,23,34,52",
        "correct_option": [
            "C"
        ],
        "current_year": 2010,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 14,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 22,
        "question_text": "Consider a hash table with 9 slots. The hash function is h(k) = k mod 9. The collisions are resolved by chaining. The following 9 keys are inserted in the order: 5, 28, 19, 15, 20, 33, 12, 17, 10. The maximum, minimum, and average chain lengths in the hash table, respectively, are",
        "A": "3,0,1",
        "B": "3,3,3",
        "C": "4,0,1",
        "D": "3,0,2",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 23,
        "question_text": "Consider a hash table with 100 slots. Collisions are resolved using chaining. Assuming simple uniform hashing, what is the probability that the first 3 slots are unfilled after the first 3 insertions?",
        "A": "(97x97x97)/100^3",
        "B": "(99x98x97)/100^3",
        "C": "(97x96x95)/100^3",
        "D": "(97x96x95)/3!x100^3",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 24,
        "question_text": "Which one of the following hash functions on integers will distribute keys most uniformly over 10 buckets numbered 0 to 9 for i ranging from 0 to 2020?",
        "A": "h(i) = i^2 mod 10",
        "B": "h(i) = i^3 mod 10",
        "C": "h(i) = (11*i^2) mod 10",
        "D": "h(i) = (12*i) mod 10",
        "correct_option": [
            "B"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 25,
        "question_text": "Given a hash table T with 25 slots that stores 2000 elements, the load factor 'alpha' for T is?",
        "A": "70",
        "B": "80",
        "C": "90",
        "D": "100",
        "correct_option": [
            "B"
        ],
        "current_year": 2015,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 26,
        "question_text": "Consider a double hashing scheme in which the primary hash function is h1(k)=k mod 23, and the secondary hash function is h2(k)=1+(k mod 19). Assume that the table size is 23. Then the address returned by probe 1 in the probe sequence (assume that the probe sequence begins at probe 0) for key value k=90 is _______.",
        "A": "10",
        "B": "11",
        "C": "92",
        "D": "13",
        "correct_option": [
            "D"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 5,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 24,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 27,
        "question_text": "Consider a dynamic hashing approach for 4-bit integer keys: 1. There is a main hash table of size 4.2. The 2 least significant bits of a key is used to index into the main hash table.3. Initially, the main hash table entries are empty.4. Thereafter, when more keys are hashed into it, to resolve collisions, the set of all keys corresponding to a main hash table entry is organized as a binary tree that grows on demand.5. First, the 3rd least significant bit is used to divide the keys into left and right subtree.6. to resolve more collisions, each node of the binary tree is further sub-divided into left and right subtree based on 4th least significant bit.7. A split is done only if it is needed, i. e. only when there is a collision.Consider the following state of the hash table.",
        "A": "10, 9, 6, 7, 5, 13",
        "B": "5,9,4,13,10,7",
        "C": "9, 5, 13, 6, 10, 14",
        "D": "9, 5, 10, 6, 7, 1",
        "correct_option": [
            "A"
        ],
        "current_year": 2021,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 25,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 28,
        "question_text": "Suppose we are given n keys, m has table slots, and two simple uniform hash functions h1 and h2. Further suppose our hashing scheme uses h1 for the odd keys and h2 for the even keys. What is the expected number of keys in a slot?",
        "A": "m/n",
        "B": "n/m",
        "C": "2n/m",
        "D": "n/2m",
        "correct_option": [
            "B"
        ],
        "current_year": 2022,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 26,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 29,
        "question_text": "An algorithm has to store several keys generated by an adversary in a hash table. The adversary is malicious who tries to maximize the number of collisions. Let k be the number of keys, m be the number of slots in the hash table, and k > m. Which one of the following is the best hashing strategy to counteract the adversary?",
        "A": "Division method",
        "B": "Multilication method",
        "C": "Universal hashing",
        "D": "if k is prime, use division. Otherwise use Multiplication",
        "correct_option": [
            "C"
        ],
        "current_year": 2023,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Hashing",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 2.25
    },
    {
        "Qid": 51,
        "question_text": "The following sequence of operations is performed on stack: PUSH (10),PUSH (20),POP,PUSH (10),PUSH (20),POP,POP,POP,PUSH (20),POP The sequence of the value popped out is:",
        "A": "20,10,20,10,20",
        "B": "20,20,10,10,20",
        "C": "10,20,20,10,20",
        "D": "20,20,10,20,10",
        "correct_option": [
            "B"
        ],
        "current_year": 1991,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 50,
        "question_text": "Which of the following permutations can be obtained in the output (in the same order) using a stack assuming that the input is the sequence 1, 2, 3, 4, 5 in that order?",
        "A": "34512",
        "B": "34521",
        "C": "15234",
        "D": "54312",
        "correct_option": [
            "B"
        ],
        "current_year": 1994,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 3,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 3,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 49,
        "question_text": "The postfix expression for the infix expression A + B * (C + D) / F + D * E is:",
        "A": "AB+CD+*F/D+E*",
        "B": "ABCD+*F/+DE*+",
        "C": "A*B+CD/F*DE++",
        "D": "A+*BCD/F*DE++",
        "correct_option": [
            "b"
        ],
        "current_year": 1995,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 4,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 48,
        "question_text": "A priority queue Q is used to implement a stack that stores characters. PUSH (C) is implemented INSERT (Q, C, K) where K is an appropriate integer key chosen by the implementation. POP is implemented as DELETEMIN(Q). For a sequence of operations, the keys chosen are in",
        "A": "non-increasing order",
        "B": "non-decreasing order",
        "C": "strictly increasing order",
        "D": "strivtly decreasing order",
        "correct_option": [
            "A"
        ],
        "current_year": 1997,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 6,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 47,
        "question_text": "Compute the post fix equivalent of the following expression. 3 * log(x+1) - a/2",
        "A": "3x1 + log*a2/-",
        "B": "3x1 + log*a2-/",
        "C": "3+1 * log*a2/-",
        "D": "3+1 - log*a2/x",
        "correct_option": [
            "A"
        ],
        "current_year": 1998,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 7,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 46,
        "question_text": "Let S be a stack of size n >= 1. Starting with the empty stack, suppose we push the first n natural numbers in sequence, and then perform n pop operations. Assume that Push and Pop operations take X seconds each, and Y seconds elapse between the end of one such stack operation and the start of the next operation. For m >= 1, define the stack-life of m as the time elapsed from the end of Push(m) to the start of the pop operation that removes m from S. The average stack-life of an element of this stack is",
        "A": "n(X+Y)",
        "B": "3Y+2X",
        "C": "n(X+Y)-X",
        "D": "Y+2X",
        "correct_option": [
            "C"
        ],
        "current_year": 2003,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 5,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 12,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 44,
        "question_text": "Assume that the operators +, -, ×, are left associative and ^ is right associative. The order of precedence (from highest to lowest) is ^, ×, +, -. The postfix expression corresponding to the infix expression a + b×c-d^e^f is",
        "A": "abc*+def^^-",
        "B": "abc*+de^f^-",
        "C": "ab+c*d-e^f^",
        "D": "-+a*bc^^def",
        "correct_option": [
            "A"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 13,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 45,
        "question_text": "A program attempts to generate as many permutation as possible of the string “abcd” by pushing the character a,b,c,d in the same order onto a stack, but it may pop off the top character at any time. Which one of the following a strings CANNOT be generated using this program?",
        "A": "abcd",
        "B": "dcba",
        "C": "cbad",
        "D": "cabd",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 13,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 32,
        "question_text": "A function f defined on stacks of integers satisfies the following properties. f(∅) = 0 and f (push (S, i)) = max (f(S), 0) + i for all stacks S and integers i. If a stack S contains the integers 2, -3, 2, -1, 2 in order from bottom to top, what is f(S)?",
        "A": "6",
        "B": "4",
        "C": "3",
        "D": "2",
        "correct_option": [
            "C"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 14,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 42,
        "question_text": "An implementation of a queue Q, using two stacks S1 and S2, is given below: void insert(Q, X){  push(S1, X);} void delete(Q){ if(stack - empty(S1)) then {   print('Q is empty');   return; }else while (!(stack - empty(S1))){   X = pop(S1);   push(S2, X); } X = pop(S2);} Let n insert and m(<=n) delete operations be performed in an arbitrary order on an empty queue Q. Let x and y be the number of push and pop operations performed respectively in the process. Which one of the following is true for all m and n?",
        "A": "n + m <= x <= 2n and 2m <= y <= n + m",
        "B": "n + m <= x <= 2n and 2m <= y <= 2n",
        "C": "2m <= x <= 2n and 2m <= y <= n + m",
        "D": "2m <= x <= 2n and 2m <= y <= 2n",
        "correct_option": [
            "A"
        ],
        "current_year": 2006,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 15,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 43,
        "question_text": "The following function computes the value of mCn correctly for all legal values m and n (m≥1,n≥0 and m>n) int func(int m, int n) { if (E) return 1; else return(func(m -1, n) + func(m - 1, n - 1)); } In the above function, which of the following is the correct expression for E?",
        "A": "n == 0 || m == 1",
        "B": "n == 0 && m == 1",
        "C": "n == 0 || m == n",
        "D": "n == 0 && m == n",
        "correct_option": [
            "C"
        ],
        "current_year": 2006,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 15,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 41,
        "question_text": "Suppose you are given an implementation of a queue of integers. The operations that can be performed on the queue are: i. isEmpty (Q) — returns true if the queue is empty false otherwise. ii. delete (Q) — deletes the element at the front of the queue and returns its value. iii. insert (Q, i) — inserts the integer i at the rear of the queue. Consider the following function: void f (queue Q) {  int i ;  if (!isEmpty(Q)) { i = delete(Q); f(Q); insert(Q, i); } } What operation is performed by the above function f ?",
        "A": "Leaves the queue Q unchanged",
        "B": "Reverses the order of the elements in the queue Q",
        "C": "Deletes the elemet at the front of the queue Q and inserts it at the rear keeping the other elemets in the same order",
        "D": "Empties the queue Q",
        "correct_option": [
            "B"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 16,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 35,
        "question_text": "Suppose a circular queue of capacity (n - 1) elements is implemented with an array of n elements. Assume that the insertion and deletion operations are carried out using REAR and FRONT as array index variables, respectively. Initially, REAR = FRONT = 0. The conditions to detect queue full and queue empty are",
        "A": "full: (REAR+1) mod n == FRONT; empty: REAR == FRONT",
        "B": "full: (REAR+1) mod n == FRONT; empty: (REAR+1) mod n == FRONT",
        "C": "full: REAR == FRONT; empty: (REAR+1) mod n == FRONT",
        "D": "full: (FRONT+1) mod n == FRONT; empty: REAR == FRONT",
        "correct_option": [
            "A"
        ],
        "current_year": 2012,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 5,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 21,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 34,
        "question_text": "Suppose a stack implementation supports an instruction REVERSE, which reverses the order of elements on the stack, in addition to the PUSH and POP instructions. Which one of the following statements is TRUE with respect to this modified stack?",
        "A": "A queue cannot be implemented using stack",
        "B": "A queue can be implemented where ENQUEUE takes a single instruction and DEQUEUE takes a sequence of two instructions",
        "C": "A queue can be implemented where ENQUEUE takes a sequence of three instructions and DEQUEUE takes a single instruction",
        "D": "A queue can be implemented where both ENQUEUE and DEQUEUE take a single instruction each",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 23,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 31,
        "question_text": "The result evaluating the postfix expression 10 5 + 60 6 / * 8 - is",
        "A": "284",
        "B": "213",
        "C": "142",
        "D": "71",
        "correct_option": [
            "C"
        ],
        "current_year": 2015,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 24,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 30,
        "question_text": "A queue is implemented using an array such that ENQUEUE and DEQUEUE operations are performed efficiently. Which one of the following statements is CORRECT (refers to the number of items in the queue)?",
        "A": "Both operations can be performed in O(1) Time",
        "B": "At most one aperation is performed in O(1) Time but the worst-case time complexity of the other operation is Omega(n)",
        "C": "The worst case time complexity of both operations is Omega(n)",
        "D": "The worst-case time complexity of both operations is Omega(log n)",
        "correct_option": [
            "A"
        ],
        "current_year": 2016,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 25,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 33,
        "question_text": "Consider the following sequence of operations on an empty stack.push(54); push(52); pop(); push(55); push(62); s = pop(); Consider the following sequence of operations on an empty queue.enqueue(21); enqueue(24); dequeue(); enqueue(28); enqueue(32); q = dequeue(); The value of s + q is",
        "A": "74",
        "B": "87",
        "C": "85",
        "D": "86",
        "correct_option": [
            "D"
        ],
        "current_year": 2021,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 5,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 30,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 40,
        "question_text": "Consider the queues Q1 containing four elements and Q2 containing none (shown as the Initial State in the figure). The only operations allowed on these two queues are Enqueue (Q, element) and Dequeue (Q). The minimum number of Enqueue operations on Q1 required to place the elements of Q1 in Q2 in reverse order (shown as the Final State in the figure) without using any additional storage is ______________.",
        "A": "5",
        "B": "2",
        "C": "3",
        "D": "0",
        "correct_option": [
            "D"
        ],
        "current_year": 2022,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Stacks and Queues",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 31,
        "average_time_gap_between_appearances": 1.94
    },
    {
        "Qid": 57,
        "question_text": "In a circular linked list organization,insertion of a record involves modification of :",
        "A": "One Pointer",
        "B": "Multiple Pointers",
        "C": "No Pointers",
        "D": "Two pointers",
        "correct_option": [
            "A"
        ],
        "current_year": 1987,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Linked List",
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 56,
        "question_text": "Linked lists are not suitable data structures of which one of the following problems?",
        "A": "Insertion SOrt",
        "B": "Binary Search",
        "C": "Radix SOrt",
        "D": "Polynomial Manipulation",
        "correct_option": [
            "B"
        ],
        "current_year": 1994,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Linked List",
        "years_since_last_appearance": 7,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 7,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 55,
        "question_text": "A circularly linked list is used to represent a Queue. A single variable p is used to access the Queue. To which node should p point such that both the operations enQueue and deQueue can be performed in constant time?",
        "A": "rear node",
        "B": "front node",
        "C": "not possible with a asingle pointer",
        "D": "node next to front",
        "correct_option": [
            "A"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Linked List",
        "years_since_last_appearance": 10,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 17,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 38,
        "question_text": "Let P be a singly linked list, Let Q be the pointer to an intermediate node x in the list.What is the worst-case time complexity of the best known algorithm to delete the node x from the list?",
        "A": "O(n)",
        "B": "O(log^2(n))",
        "C": "O(log n)",
        "D": "O(1)",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Linked List",
        "years_since_last_appearance": 10,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 17,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 39,
        "question_text": "The preorder traversal sequence of a binary search tree is 30, 20, 10, 15, 25, 23, 39, 35, 42. Which one of the following is the postorder traversal sequence of the same tree?",
        "A": "10,20,15,23,25,35,42,39,30",
        "B": "15,10,25,23,20,42,35,39,30",
        "C": "15,20,10,23,25,42,35,39,30",
        "D": "15,10,23,25,20,35,42,39,30",
        "correct_option": [
            "D"
        ],
        "current_year": 2013,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Linked List",
        "years_since_last_appearance": 9,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 26,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 37,
        "question_text": "N items are stored in a sorted doubly linked list. For a delete  operation, a pointer is provided to the record to be deleted. For a decrease key operation, a pointer is provided to the record on which the operation is to be performed. An algorithm performs the following operations on the list in this order: Theta(N), delete, O(log N) insert, O(log N) fund, and Theta(N) decrease-key. What is the time complexity of all these operations put together?",
        "A": "O(log^2(N))",
        "B": "O(N)",
        "C": "O(N^2)",
        "D": "Theta(N^2 log N)",
        "correct_option": [
            "C"
        ],
        "current_year": 2016,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Linked List",
        "years_since_last_appearance": 3,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 29,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 54,
        "question_text": "A queue is implemented using a non-circular singly linked list. The queue has a head pointer and a tail pointer, as shown in the figure. Let denote the number of nodes in the queue. Let be implemented by inserting a new node at the head, and be implemented by deletion of a node from the tail.GATE CSE 2018 Data Structures - Linked List Question 3 English Which one of the following is the time complexity of the most time-efficient implementation of and respectively, for this data structure?",
        "A": "Theta(1) and Theta(1)",
        "B": "Theta(1) and Theta(n)",
        "C": "Theta(n) and Theta(1)",
        "D": "Theta(n) and Theta(n)",
        "correct_option": [
            "B"
        ],
        "current_year": 2018,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Linked List",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 31,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 36,
        "question_text": "What is the worst case time complexity of inserting n elements into an empty linked list, if the linked list needs to be maintained in sorted order?",
        "A": "Theta(n^2)",
        "B": "Theta(n)",
        "C": "Theta(n log n)",
        "D": "Theta(1)",
        "correct_option": [
            "A",
            "C"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Linked List",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 33,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 52,
        "question_text": "Consider the problem of reversing a singly linked list. To take an example, given the linked list below: 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 the reversed linked list should look like this: 10 -> 9 -> 8 -> 7 -> 6 -> 5 -> 4 -> 3 -> 2 -> 1 Which one of the following statements is TRUE about the time complexity of algorithms that solve the above problem in O(1) space?",
        "A": "The best alogrithm for the problem takes Theta(n) time in worst case.",
        "B": "The best algorithm for the problem takes Theta(n^2) time in worst case.",
        "C": "The best algorithm for the problem takes Theta(n logn) time in worst case.",
        "D": "It is not possible to solve the problem in O(1) space.",
        "correct_option": [
            "A"
        ],
        "current_year": 2022,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Linked List",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 35,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 53,
        "question_text": "In the worst case, the number of comparisons needed to search a singly linked list of length n for a given element is",
        "A": "log n",
        "B": "n/2",
        "C": "log n - 1",
        "D": "n",
        "correct_option": [
            "D"
        ],
        "current_year": 2022,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Linked List",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 35,
        "average_time_gap_between_appearances": 5.22
    },
    {
        "Qid": 60,
        "question_text": "Let G be an undirected graph. Consider a depth-first traversal of G, and let T be the resulting depth-first search tree. Let u be a vertex in G and let v be the first new (unvisited) vertex visited after visiting u in the traversal. Which of the following statements is always true?",
        "A": "{u, v} must be an edge in G, and u is a descendant of v in T",
        "B": "{u, v} must be an edge in G, and u is a descendant of u in T",
        "C": "if {u,v} is not an edge in G then u is a leaf in T",
        "D": "if {u,v} is not an edge in G then u and v must have the same parent in T",
        "correct_option": [
            "C"
        ],
        "current_year": 2000,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 61,
        "question_text": "How many undirected graphs (not necessarily connected) can be constructed out of a given set V = { v1,v2,........,vn } of n vertices?",
        "A": "n(n-1)/2",
        "B": "2^n",
        "C": "n!",
        "D": "2^(n(n-1)/2)",
        "correct_option": [
            "D"
        ],
        "current_year": 2001,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 1,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 62,
        "question_text": "Consider an undirected unweighted graph G. Let a breadth-first traversal of G be done starting from a node r. Let d(r, u) and d(r, v) be the lengths of the shortest paths from r to u and v respectively in G. If u is visited before v during the breadth-first traversal, which of the following statements is correct?",
        "A": "d(r,u) < d(r,v)",
        "B": "d(r,u) > d(r,v)",
        "C": "d(r,u) <= d(r,v)",
        "D": "None of the above",
        "correct_option": [
            "C"
        ],
        "current_year": 2001,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 1,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 63,
        "question_text": "Consider the following graph among the following sequences I. a b e g h f II. a b f e h g III. a b f h g e IV. a f g h b e",
        "A": "I, II and IV only",
        "B": "I and IV only",
        "C": "II, III and IV only",
        "D": "i, III and IV only",
        "correct_option": [
            "D"
        ],
        "current_year": 2003,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 3,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 64,
        "question_text": "In a depth-first traversal of a graph G with n vertices,k edges are marked as tree edges. The number of connected components in G is",
        "A": "k",
        "B": "k+1",
        "C": "k-1",
        "D": "n-k",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 4,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 65,
        "question_text": "Let T be a depth-first search tree in an undirected graph G. Vertices u and v are leaves of this tree T. The degrees of both u and v in G are at least 2. Which one of the following statements is true?",
        "A": "there mush exist a vertex w adjacent to both u and v in G",
        "B": "there must exist a vertex w whose removal disconnects u and v in G",
        "C": "there must exist a cycle in G containing u and v",
        "D": "there must exist a cycle in G containing u and all its neighbours in G",
        "correct_option": [
            "D"
        ],
        "current_year": 2006,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 6,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 66,
        "question_text": "Consider the depth-first-search of an undirected graph with 3 vertices P, Q, and R. Let discovery time d(u) represent the time instant when the vertex u is first visited, and finish time f(u) represent the time instant when the vertex u is last visited. Given that d(P) = 5 units      f(P) = 12 units d(Q) = 6 units      f(Q) = 10 units d(R) = 14 unit      f(R) = 18 units Which one of the following statements is TRUE about the graph",
        "A": "there is only one connected component",
        "B": "There are 2 connected components and p and R are connected",
        "C": "There are 2 connected components and Q and R are connected",
        "D": "There are 2 connected components and P and Q are connected",
        "correct_option": [
            "D"
        ],
        "current_year": 2006,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 6,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 67,
        "question_text": "What is the largest integer m such that every simple connected graph with n vertices and n edges contains at least m different spanning tree?",
        "A": "1",
        "B": "2",
        "C": "3",
        "D": "n",
        "correct_option": [
            "C"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 7,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 68,
        "question_text": "Consider the following sequence of nodes for the undirected graph given below. 1.a b e f d g c 2.a b e f c g d 3.a d g e b c f 4.a d b c g e f A Depth First Search (DFS) is started at node a. The nodes are listed in the order they are first visited. Which all of the above is (are) possible output(s)?",
        "A": "1 and 3 only",
        "B": "2 and 3 only",
        "C": "2, 3 and 4 only",
        "D": "1,2 and 3 ",
        "correct_option": [
            "B"
        ],
        "current_year": 2008,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 8,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 69,
        "question_text": "Consider a complete undirected graph with vertex set {0,1,2,3,4}. Entry Wij in the matrix W below is the weight of the edge {i, j} What is the minimum possible weight of a path P from vertex 1 to vertex 2 in this graph such that P contains at most 3 edges?",
        "A": "7",
        "B": "8",
        "C": "9",
        "D": "10",
        "correct_option": [
            "B"
        ],
        "current_year": 2010,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 10,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 70,
        "question_text": "Consider a complete undirected graph with vertex set {0,1,2,3,4}. Entry Wij in the matrix W below is the weight of the edge {i, j} What is the minimum possible weight of a spanning tree T in this graph such that vertex 0 is a leaf node in the tree T?",
        "A": "7",
        "B": "8",
        "C": "9",
        "D": "10",
        "correct_option": [
            "D"
        ],
        "current_year": 2010,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 10,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 71,
        "question_text": "Let G be a weighted graph with edge weights greater than one and G' be the graph constructed by squaring the weights of edges in G. Let T and T' be the minimum spanning tree of G and G' respectively, with total weights t and t'. Which of the following statements is TRUE?",
        "A": "T` = T with total weight t` = t^2",
        "B": "T` = T with total weight t` < t^2",
        "C": "T` != T with total weight t` = t^2",
        "D": "None of the above",
        "correct_option": [
            "B"
        ],
        "current_year": 2012,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 12,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 72,
        "question_text": "Let G be a graph with n vertices and m edges. What is the tightest upper bound on the running time of Depth First Search on G, when G is represented as an adjacency matrix?",
        "A": "O(n)",
        "B": "O(n+m)",
        "C": "O(n^2)",
        "D": "O(m^2)",
        "correct_option": [
            "C"
        ],
        "current_year": 2014,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 14,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 73,
        "question_text": "Suppose depth first search is executed on the graph below starting at some unknown vertex. Assume that a recursive call to visit a vertex is made only after first checking that the vertex has not been visited earlier. Then the maximum possible recursion depth (including the initial call) is _________.",
        "A": "19",
        "B": "20",
        "C": "21",
        "D": "18",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 14,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 74,
        "question_text": "Consider the tree arcs of a BFS traversal from a source node W in an unweighted, connected, undirected graph. The tree T formed by the tree arcs is a data structure for computing",
        "A": "the shortest path between every pair of vertex",
        "B": "the shortest path from W to every other vertex",
        "C": "the shortest path from w to only those nodes that are leaves of T",
        "D": "the longest path in the graph",
        "correct_option": [
            "B"
        ],
        "current_year": 2014,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 14,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 75,
        "question_text": "Let G = (V, E) be a simple undirected graph, and s be a particular vertex in it called the source. For x belongs to v, let d(x) denote the shortest distance in G from s to x. A breadth first search (BFS) is performed starting at s. Let T be the resultant BFS tree. If (u, v) is an edge of G that is not in T, then which one of the following CANNOT be the value of d(u)-d(v)?",
        "A": "-1",
        "B": "0",
        "C": "1",
        "D": "2",
        "correct_option": [
            "D"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 15,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 76,
        "question_text": "Let G be a connected undirected graph of 100 vertices and 300 edges. The weight of a minimum spanning tree of G is 500. When the weight of each edge of G is increased by five, the weight of a minimum spanning tree becomes ________.",
        "A": "995",
        "B": "1000",
        "C": "1005",
        "D": "None of the above",
        "correct_option": [
            "A"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 15,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 77,
        "question_text": "In an adjacency list representation of an undirected simple graph G = (V,E) each edge (u,v) has two adjacency list entries: [v] in the adjacency list of u and [u] in the adjacency list of v. These are called twins of each other. A twin pointer is a pointer from an adjacency list entry to its twin. If |E|=m and |V| = n, and the memory size is not a constraint, what is the time complexity of the most efficient algorithm to set the twin pointer in each entry in each adjacency list?",
        "A": "O(n^2)",
        "B": "O(n+m)",
        "C": "O(m^2)",
        "D": "O(n^4)",
        "correct_option": [
            "B"
        ],
        "current_year": 2016,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 16,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 78,
        "question_text": "Consider the following directed graph:GATE CSE 2016 Set 1 Data Structures - Graphs Question 6 English. The number of different topological orderings of the vertices of the graph is ________________.",
        "A": "5",
        "B": "6",
        "C": "7",
        "D": "8",
        "correct_option": [
            "B"
        ],
        "current_year": 2016,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 16,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 79,
        "question_text": "Breadth First Search (BFS) is started on a binary tree beginning from the root vertex. There is a vertex t at a distance four from the root. If t is the n-th vertex in this BFS traversal, then the maximum possible value of n is ___________.",
        "A": "30",
        "B": "31",
        "C": "32",
        "D": "33",
        "correct_option": [
            "B"
        ],
        "current_year": 2016,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 3,
        "total_years_since_first_appearance": 16,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 80,
        "question_text": "Let G be a graph with 100! vertices, with each vertex labelled by a distinct permutation of the numbers 1,2,..100. There is an edge between vertices u and v if and only if the label of u can be obtained by swapping two adjacent numbers in the label of v. Let y denote the degree of a vertex in G and z denote the number of connected components in G. Then, y+10z = _____.",
        "A": "109",
        "B": "110",
        "C": "111",
        "D": "121",
        "correct_option": [
            "A"
        ],
        "current_year": 2018,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 81,
        "question_text": "Let G be a simple undirected graph. Let Td be a depth first search tree of G. Let Tb be a breadth first search tree of G. Consider the following statements. 1) No edge of G is a cross edge with respect to Td. (A cross edge in G is between two nodes neither of which is an ancestor of the other in Td.) 2) For every edge (u,v) of G, if u is at depth i and v is at depth j in Tb, then |i-j| = 1. Which of the statements above must necessarily be true?",
        "A": "1 only",
        "B": "2 only",
        "C": "both",
        "D": "neither",
        "correct_option": [
            "A"
        ],
        "current_year": 2018,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 82,
        "question_text": "Let G = (V, E) be a directed, weighted graph with weight function w: E -> R. For some function f: V -> R, for each edge (u, v) belongs to E, define w'(u, v) as w(u, v) + f(u) - f(v). Which one of the options completes the following sentence so that it is TRUE? “The shortest paths in G under w are shortest paths under w’ too, _______”.",
        "A": "for every f: V-> R",
        "B": "if and only if all u belong to V, f(u) is positive",
        "C": "if and only if all u belong to V, f(u) is negative",
        "D": "if and only if f(u) is the distance from s to u in the graph obtained by adding new verex s to G and edges of zero weight from s to every vertex of G.",
        "correct_option": [
            "A"
        ],
        "current_year": 2020,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Graph",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 20,
        "average_time_gap_between_appearances": 1.47
    },
    {
        "Qid": 1,
        "question_text": "It is possible to construct a binary tree uniquely whose pre-order and post-order traversals are given.",
        "A": "True",
        "B": "False",
        "C": "",
        "D": "",
        "correct_option": [
            "B"
        ],
        "current_year": 1987,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 2,
        "question_text": "If the no of leaves in a tree is not a power of 2,then the tree is not a binary tree.",
        "A": "True",
        "B": "False",
        "C": "",
        "D": "",
        "correct_option": [
            "B"
        ],
        "current_year": 1987,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "average_time_gap_between_appearances": 1.5
    },
    {
        "Qid": 3,
        "question_text": "If the binary tree in figure is traversed in inorder, then the order in which the nodes will be visited is ______",
        "A": " 4,16,7,3,2,5,8",
        "B": " 4,7,16,3,2,5,8",
        "C": " 5,8,4,16,7,3,2,",
        "D": " 3,2,4,16,7,5,8",
        "correct_option": [
            "A"
        ],
        "current_year": 1991,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 4,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 4,
        "question_text": "A binary tree T has n leaf nodes. The number of nodes of degree 2 in T is:",
        "A": "log2n",
        "B": "n-1",
        "C": "n",
        "D": "2n",
        "correct_option": [
            "B"
        ],
        "current_year": 1995,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 4,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 8,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 5,
        "question_text": "Which of the following sequences denotes the post order traversal sequence of the tree of previous question?",
        "A": "f e g c d b a",
        "B": "g c b d a f e",
        "C": "g c d b f e a",
        "D": "f e d g c b a",
        "correct_option": [
            "C"
        ],
        "current_year": 1996,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 4,
        "total_years_since_first_appearance": 9,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 6,
        "question_text": "In the balanced binary tree in Fig. given below, how many nodes will become unbalanced when a node is inserted as a child of the node “g”?",
        "A": "1",
        "B": "3",
        "C": "7",
        "D": "8",
        "correct_option": [
            "B"
        ],
        "current_year": 1996,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 4,
        "total_years_since_first_appearance": 9,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 7,
        "question_text": "A binary search tree is generated by inserting in order the following integers: 50, 15, 62, 5, 20, 58, 91, 3, 8, 37, 60, 24 The number of nodes in the left subtree and right subtree of the root respectively is ",
        "A": "(4,7)",
        "B": "(7,4)",
        "C": "(8,3)",
        "D": "(4,7)",
        "correct_option": [
            "B"
        ],
        "current_year": 1996,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 4,
        "total_years_since_first_appearance": 9,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 8,
        "question_text": "A binary search tree is used to locate the number 43. Which of the following probe sequences are not possible?",
        "A": "61   52  14   17   40   43",
        "B": "2    3   50   40   60   43",
        "C": "10   65  31   48   37   43",
        "D": "17   77  27   66   18   43",
        "correct_option": [
            "B D"
        ],
        "current_year": 1996,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 4,
        "total_years_since_first_appearance": 9,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 9,
        "question_text": "A binary search tree contains the value 1, 2, 3, 4, 5, 6, 7, 8. The tree is traversed in pre-order and the values are printed out. Which of the following sequences is a valid output?",
        "A": "5 3 1 2 4 7 8 6",
        "B": "5 3 1 2 6 4 8 7",
        "C": "5 3 2 4 1 6 7 8",
        "D": "5 3 1 2 4 7 6 8",
        "correct_option": [
            "D"
        ],
        "current_year": 1997,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 10,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 10,
        "question_text": "A complete n-ary tree is one in which every node has O or n sons. If x is the number of internal nodes of a complete n-ary tree, the number of leaves in it is given by",
        "A": "x(n-1)+1",
        "B": "xn-1",
        "C": "xn+1",
        "D": "x(n+1)",
        "correct_option": [
            "A"
        ],
        "current_year": 1998,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 11,
        "question_text": "Which of the following statements is false?",
        "A": "A tree with a n nodes has (n – 1) edges ",
        "B": "A labeled rooted binary tree can be uniquely constructed given its postorder and preorder traversal results.  ",
        "C": "A complete binary tree with n internal nodes has (n + 1) leaves. ",
        "D": "The maximum number of nodes in a binary tree of height h is (2^(h+1))",
        "correct_option": [
            "C"
        ],
        "current_year": 1998,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 11,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 12,
        "question_text": "Consider the following nested representation of binary trees: (X Y Z) indicates Y and Z are the left and right sub stress, respectively, of node X. Note that Y and Z may be NULL, or further nested. Which of the following represents a valid binary tree?",
        "A": "(1 2 (4 5 6 7))",
        "B": "(1 (2 3 4) 5 6) 7)",
        "C": "(1 (2 3 4)(5 6 7))",
        "D": "(1 (2 3 NULL) (4 5))",
        "correct_option": [
            "C"
        ],
        "current_year": 2000,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 13,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 13,
        "question_text": "Let LASTPOST, LASTIN and LASTPRE denote the last vertex visited in a postorder, inorder and preorder traversal. Respectively, of a complete binary tree. Which of the following is always tree?",
        "A": "LASTIN = LASTPOST ",
        "B": "LASTIN = LASTPRE ",
        "C": "LASTPRE = LASTPOST ",
        "D": "None of the above",
        "correct_option": [
            "D"
        ],
        "current_year": 2000,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 13,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 14,
        "question_text": "The number of leaf nodes in a rooted tree of n nodes, with each node having 0 or 3 children is:",
        "A": "n/2 ",
        "B": "(n-1)/3",
        "C": "(n-1)/2",
        "D": "(2n+1)/3",
        "correct_option": [
            "D"
        ],
        "current_year": 2002,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 15,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 15,
        "question_text": "Suppose the numbers 7, 5, 1, 8, 3, 6, 0, 9, 4, 2 are inserted in that order into an initially empty binary search tree. The binary search tree uses the usual ordering on natural numbers. What is the in-order traversal sequence of the resultant tree?",
        "A": "7 5 1 0 3 2 4 6 8 9 ",
        "B": "0 2 4 3 1 6 5 9 8 7",
        "C": "0 1 2 3 4 5 6 7 8 9",
        "D": "9 8 6 4 2 3 0 1 5 7",
        "correct_option": [
            "C"
        ],
        "current_year": 2003,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 16,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 16,
        "question_text": "Level order traversal of a rooted tree can be done by starting from the root and performing",
        "A": "preorder traversal ",
        "B": "in-order traversal ",
        "C": "depth first search ",
        "D": "breadth first search",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 5,
        "total_years_since_first_appearance": 17,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 17,
        "question_text": "The following numbers are inserted into an empty binary search tree in the given order: 10, 1, 3, 5, 15, 12, 16. What is the height of the binary search tree (the height is the maximum distance of a leaf node from the root)?",
        "A": "2",
        "B": "3",
        "C": "4",
        "D": "6",
        "correct_option": [
            "B"
        ],
        "current_year": 2004,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 5,
        "total_years_since_first_appearance": 17,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 18,
        "question_text": "A program takes as input a balanced binary search tree with n leaf nodes and computes the value of a function g(x) for each node x. If the cost of computing g(x) is min{ no. of leaf-nodes in left-subtree of x, no. of leaf-nodes in right-subtree of x } then the worst-case time complexity of the program is",
        "A": "O(N)",
        "B": "(N logN)",
        "C": "(N^2)",
        "D": "O(N^2 logN)",
        "correct_option": [
            "B"
        ],
        "current_year": 2004,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 5,
        "total_years_since_first_appearance": 17,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 19,
        "question_text": "Consider the label sequences obtained by the following pairs of traversals on a labeled binary tree. Which of these pairs identify a tree uniquely? i) preorder and postorder ii) inorder and postorder iii) preorder and inorder iv) level order and postorder",
        "A": "I only",
        "B": "II,III",
        "C": "III",
        "D": "IV",
        "correct_option": [
            "B"
        ],
        "current_year": 2004,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 5,
        "total_years_since_first_appearance": 17,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 20,
        "question_text": "Consider the following C program segment \nstruct CellNode{ \n    struct CellNode *leftChild; \n    int element; \n    struct CellNode *rightChild; \n  };\n \nint Dosomething (struct CellNode *ptr) { \n      int value = 0; \n      if (ptr ! = NULL) \n          { if (ptr - > leftChild ! = NULL) \n            value = 1 + DoSomething (ptr - > leftChild); \n          if (ptr - > rightChild ! = NULL) \n            value = max(value,1 + DoSomething (ptr - > rightChild)); \n          } \n      return (value); \n}",
        "A": "The number of leaf nodes in the tree ",
        "B": "The number of nodes in the tree ",
        "C": "The number of internal nodes in the tree ",
        "D": "Height of the tree",
        "correct_option": [
            "D"
        ],
        "current_year": 2004,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 5,
        "total_years_since_first_appearance": 17,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 21,
        "question_text": "The numbers 1, 2, ........, n are inserted in a binary search tree in some order. In the resulting tree, the right subtree of the root contains p nodes. The first number to be inserted in the tree must be",
        "A": "p",
        "B": "p+1",
        "C": "n-p",
        "D": "n-p+1",
        "correct_option": [
            "C"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 22,
        "question_text": "Postorder traversal of a given binary search tree T produces the following sequence of keys 10, 9, 23, 22, 27, 25, 15, 50, 95, 60, 40, 29 Which one of the following sequences of keys can be the result of an inorder traversal of the tree T?",
        "A": "9, 10, 15, 22, 23, 25, 27, 29, 40, 50, 60, 95",
        "B": "9, 10, 15, 22, 40, 50, 60, 95, 23, 25, 27, 29 ",
        "C": "29, 15, 9, 10, 25, 22, 23, 27, 40, 60, 50, 95",
        "D": "95, 50, 60, 40, 27, 23, 22, 25, 10, 9, 15, 29",
        "correct_option": [
            "A"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 23,
        "question_text": "In a complete k-ary tree, every internal node has exactly k children. The number of leaves in such a tree with n internal nodes is",
        "A": "nk",
        "B": "(n-1)k+1",
        "C": "n(k-1)+1",
        "D": "n(k-1)",
        "correct_option": [
            "C"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 24,
        "question_text": "In a binary tree, for every node the difference between the number of nodes in the left and right subtrees is at most 2. If the height of the tree is h > 0, then the minimum number of nodes in the tree is:",
        "A": "2^h-1",
        "B": "2^(h-1)+1",
        "C": "2^h+1",
        "D": "2^h",
        "correct_option": [
            "B"
        ],
        "current_year": 2005,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 25,
        "question_text": "How many distinct binary search trees can be created out of 4 distinct keys?",
        "A": "5",
        "B": "14",
        "C": "24",
        "D": "42    ",
        "correct_option": [
            "B"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 26,
        "question_text": "A Priority-Queue is implemented as a Max-Heap. Initially, it has 5 elements. The level-order traversal of the heap is given below: 10, 8, 5, 3, 2 Two new elements ”1‘ and ”7‘ are inserted in the heap in that order. The level-order traversal of the heap after the insertion of the elements is:",
        "A": "10, 8, 7, 5, 3, 2, 1 ",
        "B": "10, 8, 7, 2, 3, 1, 5",
        "C": "10, 8, 7, 1, 2, 3, 5 ",
        "D": "10, 8, 7, 3, 2, 1, 5",
        "correct_option": [
            "D"
        ],
        "current_year": 2005,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 18,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 27,
        "question_text": "A scheme for storing binary trees in an array X is as follows. Indexing of X starts at 1 instead of 0. the root is stored at X[1]. For a node stored at X[i], the left child, if any, is stored in X[2i] and the right child, if any, in X[2i+1]. To be able to store any binary tree on n vertices the minimum size of X should be",
        "A": "log2n",
        "B": "n",
        "C": "2*n+1",
        "D": "2^n-1",
        "correct_option": [
            "B"
        ],
        "current_year": 2006,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 7,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 28,
        "question_text": "In a binary tree, the number of internal nodes of degree 1 is 5, and the number of internal nodes of degree 2 is 10. The number of leaf nodes in the binary tree is",
        "A": "10",
        "B": "11",
        "C": "12",
        "D": "15",
        "correct_option": [
            "B"
        ],
        "current_year": 2006,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 7,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 29,
        "question_text": "Suppose that we have numbers between 1 and 100 in a binary search tree and want to search for the number 55. Which of the following sequences CANNOT be the sequence of nodes examined?",
        "A": "{10, 75, 64, 43, 60, 57, 55}",
        "B": "{90, 12, 68, 34, 62, 45, 55} ",
        "C": "{9, 85, 47, 68, 43, 57, 55}",
        "D": "{79, 14, 72, 56, 16, 53, 55}",
        "correct_option": [
            "C"
        ],
        "current_year": 2006,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 7,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 30,
        "question_text": "Which of the following sequences of array elements forms a heap?",
        "A": "{23, 17, 14, 6, 13, 10, 1, 12, 7, 5} ",
        "B": "{23, 17, 14, 6, 13, 10, 1, 5, 7, 12}",
        "C": "{23, 17, 14, 7, 13, 10, 1, 5, 6, 12} ",
        "D": "{23, 17, 14, 7, 13, 10, 1, 12, 5, 7}",
        "correct_option": [
            "C"
        ],
        "current_year": 2006,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 7,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 31,
        "question_text": "An array X of n distinct integers is interpreted as a complete binary tree. The index of the first element of the array is 0. The index of the parent of element X[i],i≠0 is?",
        "A": "⌊ i/2 ⌋ ",
        "B": "⌈ (i-1)/2 ⌉ ",
        "C": "⌈ i/2 ⌉",
        "D": "⌈ i/2 - 1 ⌉",
        "correct_option": [
            "D"
        ],
        "current_year": 2006,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 7,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 31,
        "question_text": "An array X of n distinct integers is interpreted as a complete binary tree. The index of the first element of the array is 0. If only the root node does not satisfy the heap property, the algorithm to convert the complete binary tree into a heap has the best asymptotic time complexity of",
        "A": "O(N)",
        "B": "O(logN)",
        "C": "O(N logN)",
        "D": "O(N log(logN)",
        "correct_option": [
            "B"
        ],
        "current_year": 2006,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 7,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 32,
        "question_text": "An array X of n distinct integers is interpreted as a complete binary tree. The index of the first element of the array is 0. The index of the parent of element X[i],i≠0 is?",
        "A": "⌊ i/2 ⌋ ",
        "B": "⌈ (i-1)/2 ⌉ ",
        "C": "⌈ i/2 ⌉",
        "D": "⌈ i/2 - 1 ⌉",
        "correct_option": [
            "D"
        ],
        "current_year": 2006,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 7,
        "total_years_since_first_appearance": 19,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 33,
        "question_text": "The inorder and preorder traversal of a binary tree are d b e a f c g and a b d e c f g, respectively. The postorder traversal of the binary tree is:",
        "A": "d e b f g c a",
        "B": "e d b g f c a ",
        "C": "e d b f g c a",
        "D": "d e f g b c a",
        "correct_option": [
            "A"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 20,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 34,
        "question_text": "Consider the following C program segment where CellNode represents a node in a binary tree: \n struct CellNode  \n {  \n      struct CellNOde *leftChild;  \n      int element;  \n      struct CellNode *rightChild;  \n };  \n int GetValue(struct CellNode *ptr)  \n {  \n      int value = 0;  \n      if (ptr != NULL)  \n      {  \n        if ((ptr->leftChild == NULL) &&  \n         (ptr->rightChild == NULL))  \n        value = 1;  \n        else  \n          value = value + GetValue(ptr->leftChild)  \n              + GetValue(ptr->rightChild);  \n      }  \n      return(value);  \n }  \n The value returned by GetValue() when a pointer to the root of a binary tree is passed as its argument is:",
        "A": "the number of nodes in the tree ",
        "B": "the number of internal nodes in the tree",
        "C": "the number of leaf nodes in the tree ",
        "D": "the height of the tree",
        "correct_option": [
            "C"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 20,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 35,
        "question_text": "When searching for the key value 60 in a binary search tree, nodes containing the key values 10, 20, 40, 50, 70 80, 90 are traversed, not necessarily in the order given. How many different orders are possible in which these key values can occur on the search path from the root to the node containing the value 60?",
        "A": "35 ",
        "B": "64",
        "C": "128 ",
        "D": "5040",
        "correct_option": [
            "A"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 20,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 36,
        "question_text": "A complete n-ary tree is a tree in which each node has n children or no children. Let I be the number of internal nodes and L be the number of leaves in a complete n-ary tree. If L = 41, and I = 10, what is the value of n?",
        "A": "3",
        "B": "4",
        "C": "5",
        "D": "6",
        "correct_option": [
            "C"
        ],
        "current_year": 2007,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 20,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 37,
        "question_text": "The height of a binary tree is the maximum number of edges in any root to leaf path. The maximum number of nodes in a binary tree of height h is:",
        "A": "2^h-1",
        "B": "2^h-1-1",
        "C": "2^(h+1)-1",
        "D": "2^(h+1)",
        "correct_option": [
            "C"
        ],
        "current_year": 2007,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 20,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 38,
        "question_text": "The maximum number of binary trees that can be formed with three unlabeled nodes is:",
        "A": "1",
        "B": "5",
        "C": "4",
        "D": "3",
        "correct_option": [
            "B"
        ],
        "current_year": 2007,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 20,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 39,
        "question_text": "Which of the following is TRUE?",
        "A": "The cost of searching an AVL tree is θ (log n) but that of a binary search tree is O(n)",
        "B": "The cost of searching an AVL tree is θ (log n) but that of a complete binary tree is θ (n log n) ",
        "C": "The cost of searching a binary search tree is O (log n ) but that of an AVL tree is θ(n)",
        "D": "The cost of searching an AVL tree is θ (n log n) but that of a binary search tree is O(n)",
        "correct_option": [
            "A"
        ],
        "current_year": 2008,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 21,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 40,
        "question_text": "The following three are known to be the preorder, inorder and postorder sequences of a binary tree. But it is not known which is which. MBCAFHPYK KAMCBYPFH MABCKYFPH Pick the true statement from the following.",
        "A": "I and II are preorder and inorder sequences, respectively ",
        "B": "I and III are preorder and postorder sequences, respectively ",
        "C": "II is the inorder sequence, but nothing more can be said about the other two sequences ",
        "D": "II and III are the preorder and inorder sequences, respectively",
        "correct_option": [
            "D"
        ],
        "current_year": 2008,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 21,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 41,
        "question_text": "A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys. I. 81, 537, 102, 439, 285, 376, 305 II. 52, 97, 121, 195, 242, 381, 472 III. 142, 248, 520, 386, 345, 270, 307 IV. 550, 149, 507, 395, 463, 402, 270 Suppose the BST has been unsuccessfully searched for key 273. Which all of the above sequences list nodes in the order in which we could have encountered them in the search?",
        "A": "II III",
        "B": "I III",
        "C": "III IV",
        "D": "III",
        "correct_option": [
            "D"
        ],
        "current_year": 2008,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 21,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 42,
        "question_text": "A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys.   \n   I. 81, 537, 102, 439, 285, 376, 305 \n  II. 52, 97, 121, 195, 242, 381, 472  \n  III. 142, 248, 520, 386, 345, 270, 307 \n  IV. 550, 149, 507, 395, 463, 402, 270",
        "A": "I, II and IV are inorder sequences of three different BSTs ",
        "B": "I is a preorder sequence of some BST with 439 as the root ",
        "C": "II is an inorder sequence of some BST where 121 is the root and 52 is a leaf ",
        "D": "IV is a postorder sequence of some BST with 149 as the root",
        "correct_option": [
            "C"
        ],
        "current_year": 2008,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 21,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 43,
        "question_text": "How many distinct BSTs can be constructed with 3 distinct keys?",
        "A": "4",
        "B": "5",
        "C": "6",
        "D": "9",
        "correct_option": [
            "B"
        ],
        "current_year": 2008,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 21,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 44,
        "question_text": "You are given the postorder traversal, P, of a binary search tree on the n elements 1, 2,..........., n. You have to determine the unique binary search tree that has P as its postorder traversal. What is the time complexity of the most efficient algorithm for doing this?",
        "A": "O(logN)",
        "B": "O(N)",
        "C": "O(N logN)",
        "D": "None of the above",
        "correct_option": [
            "B"
        ],
        "current_year": 2008,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 21,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 44,
        "question_text": "What is the maximum height of any AVL-tree with 7 nodes? Assume that the height of a tree with a single node is 0.",
        "A": "2",
        "B": "3",
        "C": "4",
        "D": "5",
        "correct_option": [
            "B"
        ],
        "current_year": 2009,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 22,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 45,
        "question_text": "A max-heap is a heap where the value of each parent is greater than or equal to the value of its children. Which of the following is a max-heap?",
        "A": "B",
        "B": "B",
        "C": "B",
        "D": "B",
        "correct_option": [
            "B"
        ],
        "current_year": 2011,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 24,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 46,
        "question_text": "We are given a set of n distinct elements and an unlabeled binary tree with n nodes. In how many ways can we populate the tree with the given set so that it becomes a binary search tree?",
        "A": "0",
        "B": "1",
        "C": "n!",
        "D": "(1/n+1)*2nCn",
        "correct_option": [
            "D"
        ],
        "current_year": 2011,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 24,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 47,
        "question_text": "The height of a tree is defined as the number of edges on the longest path in the tree. The function shown in the pseudocode below is invoked as height (root) to compute the height of a binary tree rooted at the tree pointer root. \n int height (treeptr n)  \n   { if (n== NULL) return -1;  \n   if (n-> left == NULL)  \n   if (n-> right ==NULL) return 0;  \n   else return B1 ;             // Box 1  \n   else {h1 = height (n -> left);  \n       if (n -> right == NULL) return (1 + h1);  \n       else {h2 = height (n -> right);  \n           return B2 ;          // Box 2  \n           }  \n       }  \n } \n The appropriate expression for the two boxes B1 and B2 are",
        "A": "B1 : (1 + height(n->right)), B2 : (1 + max(h1,h2)) ",
        "B": "B1 : (height(n->right)), B2 : (1 + max(h1,h2)) ",
        "C": "B1 : height(n->right), B2 : max(h1,h2) ",
        "D": "B1 : height(n->right), B2 : max(h1,h2) ",
        "correct_option": [
            "A"
        ],
        "current_year": 2012,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 25,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 48,
        "question_text": "Consider the following rooted tree with the vertex labelled P as the rootGATE CSE 2014 Set 3 Data Structures - Trees Question 58 EnglishThe order in which the nodes are visited during an in-order traversal of the tree is",
        "A": "SQPTRWUV",
        "B": "SQPTRUWRV",
        "C": "SQPTWUVR",
        "D": "SQPTRUWV",
        "correct_option": [
            "A"
        ],
        "current_year": 2014,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 49,
        "question_text": "Consider a rooted n node binary tree represented using pointers. The best upper bound on the time required to determine the number of subtrees having exactly 4 nodes O(na Logbn ). Then the value of a + 10b is _________",
        "A": "2",
        "B": "1",
        "C": "3",
        "D": "4",
        "correct_option": [
            "B"
        ],
        "current_year": 2014,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 50,
        "question_text": "Consider the expression tree shown. Each leaf represents a numerical value, which can either be 0 or 1. Over all possible choices of the values at the leaves, the maximum possible value of the expression represented by the tree is ___.",
        "A": "3",
        "B": "5",
        "C": "6",
        "D": "9",
        "correct_option": [
            "C"
        ],
        "current_year": 2014,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 51,
        "question_text": "Consider the pseudocode given below. The function Dosomething () takes as argument a pointer to the root of an arbitrary tree represented by the leftMostChild-rightSibling representation. Each node of the tree is of type treeNode. \n typedef struct treeNode* treeptr;  \n Struct treeNode  \n {  \n     Treeptr leftMostchild, rightSibiling;  \n };  \n Int Dosomething (treeptr tree)  \n {  \n     int value =0;  \n     if (tree ! = NULL) {  \n       If (tree -> leftMostchild = = NULL)  \n           value=1;  \n     else  \n         value = Dosomething (tree->leftMostchild);  \n         value = value + Dosometing (tree->rightsibiling);  \n     }  \n     return (value);  \n } \n When the pointer to the root of a tree is passed as the argument to DoSomething, the value returned by the function corresponds to the",
        "A": "number of internal nodes in the tree.",
        "B": "height of the tree",
        "C": "number of nodes without a right sibling in the tree. ",
        "D": "number of leaf nodes in the tree.",
        "correct_option": [
            "D"
        ],
        "current_year": 2014,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 52,
        "question_text": "Consider the C function given below. Assume that the array listA contains n (> 0) elements, sored in ascending order. \n int ProcessArray(int *listA, int x, int n)  \n {  \n       int i, j, k;  \n       i = 0;  \n       j = n-1;  \n       do  \n       {  \n          k = (i+j)/2;  \n          if (x <= listA[k])  \n            j = k-1;  \n          if (listA[k] <= x)  \n            i = k+1;  \n       }  \n       while (i <= j);  \n       if (listA[k] == x)  \n            return(k);  \n       else  \n            return -1;  \n } \nWhich one of the following statements about the function ProcessArray is CORRECT?",
        "A": "It will run into an infinite loop when x is not in listA.",
        "B": "It is an implementation of binary search. ",
        "C": "It will always find the maximum element in listA. . ",
        "D": "It will return −1 even when X is present in listA..",
        "correct_option": [
            "B"
        ],
        "current_year": 2014,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 27,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 53,
        "question_text": "Consider a binary tree T that has 200 leaf nodes. Then, the number of nodes in that have exactly two children are ________.",
        "A": "200.",
        "B": "199",
        "C": "201",
        "D": "222",
        "correct_option": [
            "B"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 28,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 54,
        "question_text": "Consider a complete binary tree where the left and the right sub-trees of the root are max-heaps. The lower bound for the number of operations to convert the tree to a heap is",
        "A": "O(log N)",
        "B": "O(N)",
        "C": "O(N logN)",
        "D": "O(N^2)",
        "correct_option": [
            "A"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 28,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 55,
        "question_text": "While inserting the elements 71 65 84 69 67 83  in an empty binary search tree  in the sequence shown, the element in the lowest level is",
        "A": "65",
        "B": "67",
        "C": "69",
        "D": "83",
        "correct_option": [
            "B"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 28,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 56,
        "question_text": "A binary tree T has 20 leaves. The number of nodes in T having two children is _______________.",
        "A": "19",
        "B": "18",
        "C": "20",
        "D": "17",
        "correct_option": [
            "A"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 28,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 57,
        "question_text": "Which of the following is/are correct inorder traversal sequence(s) of binary search tree(s)? \n I. 3, 5, 7, 8, 15, 19, 25 \n II. 5, 8, 9, 12, 10, 15, 25 \n III. 2, 7, 10, 8, 14, 16, 20 \n IV. 4, 6, 7, 9 18, 20, 25",
        "A": "I IV",
        "B": "II III",
        "C": "II IV",
        "D": "II",
        "correct_option": [
            "A"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 28,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 58,
        "question_text": "What are the worst-case complexities of insertion and deletion of a key in a binary search tree?",
        "A": "O(N)  for both insertion and deletion",
        "B": "O(N)  for both insertion and deletion",
        "C": "O(N) for  insertion and O(log N) for deletion",
        "D": "O(log N) for insertion and O(N) for deletion",
        "correct_option": [
            "B"
        ],
        "current_year": 2015,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 6,
        "total_years_since_first_appearance": 28,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 59,
        "question_text": "Consider the following  \n New-order strategy for traversing a binary tree: \n Visit the root; \n Visit the right subtree using New-order \n Visit the left subtree using New-order The New-order traversal of the expression tree corresponding to the reverse polish expression 3 4 * 5 - 2 ^ 6 7 * 1 + - is given by: ",
        "A": "+ - 1 6 7 * 2 ^ 5 - 3 4 *",
        "B": "- + 1 * 6 7 ^ 2 - 5 * 3 4",
        "C": "- + 1 * 7 6 ^ 2 - 5 * 4 3",
        "D": "1 7 6 * + 2 5 4 3 * - ^ - New-order;",
        "correct_option": [
            "C"
        ],
        "current_year": 2016,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 29,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 60,
        "question_text": "The number of ways in which the numbers 1,2,3,4,5,6,7 can be inserted in an empty binary search tree, such that the resulting tree has height 6 is",
        "A": "64",
        "B": "71",
        "C": "61",
        "D": "21",
        "correct_option": [
            "A"
        ],
        "current_year": 2016,
        "difficulty_level": "Medium",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 0,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 29,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 61,
        "question_text": "The postorder traversal of a binary tree is 8,9,6,7,5,4,2,3,1 The inorder traversal of the same tree is 8,6,9,4,7,2,5,1,3 The height of a tree is the length of the longest path from the root to any leaf. The height of the binary tree above is ______.",
        "A": "5",
        "B": "4",
        "C": "8",
        "D": "1",
        "correct_option": [
            "B"
        ],
        "current_year": 2018,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 2,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 31,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 62,
        "question_text": "Let T be a full binary tree with 8 leaves. (A full binary tree has every level full). Suppose two leaves a and b of T are chosen uniformly and independently at random. The expected value of the distance between a and b in T (i.e., the number of edges in the unique path between a and b) is (rounded off to 2 decimal places) _____.",
        "A": "12.5",
        "B": "4.25",
        "C": "1.52",
        "D": "3.25",
        "correct_option": [
            "B"
        ],
        "current_year": 2019,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 32,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 63,
        "question_text": "Let T be a full binary tree with 8 leaves. (A full binary tree has every level full). Suppose two leaves a and b of T are chosen uniformly and independently at random. The expected value of the distance between a and b in T (i.e., the number of edges in the unique path between a and b) is (rounded off to 2 decimal places) _____.",
        "A": "12.5",
        "B": "4.25",
        "C": "1.52",
        "D": "3.25",
        "correct_option": [
            "B"
        ],
        "current_year": 2019,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 32,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 64,
        "question_text": "What is the worst case time complexity of inserting n2 elements into an AVL-tree with n elements initially?",
        "A": "O(n^2)",
        "B": "O(N^2 logN)",
        "C": "O(N^4)",
        "D": "O(N^3)",
        "correct_option": [
            "B"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 33,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 65,
        "question_text": "The preorder traversal of a binary search tree is 15, 10, 12, 11, 20, 18, 16, 19. Which one of the following is the postorder traversal of the tree?",
        "A": "20, 19, 18, 16, 15, 12, 11, 10",
        "B": "10, 11, 12, 15, 16, 18, 19, 20",
        "C": "11, 12, 10, 16, 19, 18, 20, 15",
        "D": "19, 16, 18, 20, 11, 12, 10, 15",
        "correct_option": [
            "C"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 33,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 66,
        "question_text": "In a balanced binary search tree with n elements, what is the worst case time complexity of reporting all elements in range [a, b]? Assume that the number of reported elements is k.",
        "A": "O(logN)",
        "B": "O(logN+k)",
        "C": "O(klogN)",
        "D": "O(n logk)",
        "correct_option": [
            "B"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 33,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 67,
        "question_text": "Consider the array representation of a binary min-heap containing 1023 elements. The minimum number of comparisons required to find the maximum in the heap is _______.",
        "A": "O(logN)",
        "B": "O(logN+k)",
        "C": "O(klogN)",
        "D": "O(n logk)",
        "correct_option": [
            "B"
        ],
        "current_year": 2020,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 33,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 68,
        "question_text": "A binary search tree T contains n distinct elements. What is the time complexity of picking an element in T that is smaller than the maximum element in T?.",
        "A": "O(1)",
        "B": "O(n logN)",
        "C": "O(logN)",
        "D": "O(n)",
        "correct_option": [
            "A"
        ],
        "current_year": 2021,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 34,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 69,
        "question_text": "Consider the following statements. S1 : The sequence of procedure calls corresponds to a preorder traversal of the activation tree S2 : The sequence of procedure returns corresponds to a postorder traversal of the activation tree Which one of the following options is correct?",
        "A": "S1 is True and S2 is  true",
        "B": "S1 is false and S2 is  false",
        "C": "S1 is false and S2 is  false",
        "D": "S1 is True and S2 is  false",
        "correct_option": [
            "A"
        ],
        "current_year": 2021,
        "difficulty_level": "Easy",
        "marks": 2,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 2,
        "total_years_since_first_appearance": 34,
        "average_time_gap_between_appearances": 1.50
    },
    {
        "Qid": 70,
        "question_text": "Suppose a binary search tree with 1000 distinct elements is also a complete binary tree. The tree is stored using the array representation of binary heap trees. Assuming that the array indices start with 0, the 3rd largest element of the tree is stored at index ___________.",
        "A": "596",
        "B": "590",
        "C": "509",
        "D": "510",
        "correct_option": [
            "C"
        ],
        "current_year": 2022,
        "difficulty_level": "Medium",
        "marks": 1,
        "tags": "Tree",
        "years_since_last_appearance": 1,
        "appeared_in_next_exam": 1,
        "number_of_times_appeared": 1,
        "total_years_since_first_appearance": 35,
        "average_time_gap_between_appearances": 1.50
    }
]